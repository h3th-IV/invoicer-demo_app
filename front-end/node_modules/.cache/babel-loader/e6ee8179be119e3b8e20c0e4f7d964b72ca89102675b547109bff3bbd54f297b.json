{"ast":null,"code":"var _jsxFileName = \"/home/heth/herxes/web/nothe/invoicer-demo_app/front-end/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { handleApiError } from '../utils/errorHandler';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Login functions\n  const loginStaff = async (email, password) => {\n    try {\n      const response = await authAPI.loginStaff({\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n      setIsAuthenticated(true);\n      toast.success('Staff logged in successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      handleApiError(error, toast, 'Login failed');\n      return {\n        success: false\n      };\n    }\n  };\n  const loginClient = async (email, password) => {\n    try {\n      const response = await authAPI.loginClient({\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n      setIsAuthenticated(true);\n      toast.success('Client logged in successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      handleApiError(error, toast, 'Login failed');\n      return {\n        success: false\n      };\n    }\n  };\n\n  // Register functions\n  const registerStaff = async userData => {\n    try {\n      const response = await authAPI.registerStaff(userData);\n      const {\n        token,\n        user\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n      setIsAuthenticated(true);\n      toast.success('Staff registered successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      handleApiError(error, toast, 'Registration failed');\n      return {\n        success: false\n      };\n    }\n  };\n  const registerClient = async userData => {\n    try {\n      const response = await authAPI.registerClient(userData);\n      const {\n        token,\n        user\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n      setIsAuthenticated(true);\n      toast.success('Client registered successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      handleApiError(error, toast, 'Registration failed');\n      return {\n        success: false\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.success('Logged out successfully!');\n  };\n\n  // Check if user is staff\n  const isStaff = () => {\n    return user && user.type === 'staff';\n  };\n\n  // Check if user is client\n  const isClient = () => {\n    return user && user.type === 'client';\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return user && user.type === 'staff' && user.role === 'admin';\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    loginStaff,\n    loginClient,\n    registerStaff,\n    registerClient,\n    logout,\n    isStaff,\n    isClient,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","handleApiError","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","savedUser","JSON","parse","error","console","removeItem","loginStaff","email","password","response","data","setItem","stringify","success","loginClient","registerStaff","userData","registerClient","logout","isStaff","type","isClient","isAdmin","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/heth/herxes/web/nothe/invoicer-demo_app/front-end/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { handleApiError } from '../utils/errorHandler';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  // Login functions\n  const loginStaff = async (email, password) => {\n    try {\n      const response = await authAPI.loginStaff({ email, password });\n      const { token, user } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      setUser(user);\n      setIsAuthenticated(true);\n      \n      toast.success('Staff logged in successfully!');\n      return { success: true };\n    } catch (error) {\n      handleApiError(error, toast, 'Login failed');\n      return { success: false };\n    }\n  };\n\n  const loginClient = async (email, password) => {\n    try {\n      const response = await authAPI.loginClient({ email, password });\n      const { token, user } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      setUser(user);\n      setIsAuthenticated(true);\n      \n      toast.success('Client logged in successfully!');\n      return { success: true };\n    } catch (error) {\n      handleApiError(error, toast, 'Login failed');\n      return { success: false };\n    }\n  };\n\n  // Register functions\n  const registerStaff = async (userData) => {\n    try {\n      const response = await authAPI.registerStaff(userData);\n      const { token, user } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      setUser(user);\n      setIsAuthenticated(true);\n      \n      toast.success('Staff registered successfully!');\n      return { success: true };\n    } catch (error) {\n      handleApiError(error, toast, 'Registration failed');\n      return { success: false };\n    }\n  };\n\n  const registerClient = async (userData) => {\n    try {\n      const response = await authAPI.registerClient(userData);\n      const { token, user } = response.data.data;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n      \n      setUser(user);\n      setIsAuthenticated(true);\n      \n      toast.success('Client registered successfully!');\n      return { success: true };\n    } catch (error) {\n      handleApiError(error, toast, 'Registration failed');\n      return { success: false };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    toast.success('Logged out successfully!');\n  };\n\n  // Check if user is staff\n  const isStaff = () => {\n    return user && user.type === 'staff';\n  };\n\n  // Check if user is client\n  const isClient = () => {\n    return user && user.type === 'client';\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return user && user.type === 'staff' && user.role === 'admin';\n  };\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    loginStaff,\n    loginClient,\n    registerStaff,\n    registerClient,\n    logout,\n    isStaff,\n    isClient,\n    isAdmin,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}